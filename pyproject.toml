[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qbscripts"
version = "0.1.0"
description = "qBittorrent Peer-IP Clustering & ProtonVPN Server Recommender"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Tahmidul Islam", email = "me@tahmidul612.com" },
]
license = { text = "MIT" }
dependencies = [
    "cachetools>=6.2.1",
    "folium>=0.20.0",
    "geopy>=2.4.1",
    "numpy>=2.3.4",
    "qbittorrent-api>=2025.7.0",
    "requests>=2.32.5",
    "rich>=14.2.0",
    "scikit-learn>=1.7.2",
    "typer>=0.20.0",
]

[project.scripts]
qb-peer-vpn = "qb_peer_vpn.cli:app"

[tool.uv]
package = true

[tool.hatch.build.targets.wheel]
packages = ["src/qb_peer_vpn"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
annotated_tag = true
gpg_sign = true
pre_bump_hooks = [
    "uv lock",
    "git add uv.lock",
]

[dependency-groups]
dev = [
    "click>=8.3.0",
    "commitizen>=4.9.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "ruff>=0.14.1",
    "typer>=0.20.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/qb_peer_vpn --cov-report=term-missing --cov-report=html"
